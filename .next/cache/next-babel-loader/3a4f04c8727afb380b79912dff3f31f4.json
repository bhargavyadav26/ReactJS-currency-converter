{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\my-projects\\\\civil\\\\components\\\\Home.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Header, Button, Divider } from 'semantic-ui-react';\nimport Axios from 'axios';\nimport { FaExchangeAlt } from \"react-icons/fa\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"firstDD\", (event, {\n      value\n    }) => {\n      const {\n        firstCurr,\n        secondCurr,\n        date\n      } = this.state;\n      console.log(\"firstDD\", event.target, {\n        value\n      });\n      this.setState({\n        firstCurr: value\n      });\n\n      if ({\n        value\n      } !== '' && secondCurr !== '') {\n        Axios.get(`https://api.exchangeratesapi.io/latest?symbols=${secondCurr}&base=${value}`).then(res => {\n          console.log(\"res \", res);\n          this.setState({\n            exchangeData: res.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(this, \"secondDD\", (event, {\n      value\n    }) => {\n      const {\n        firstCurr,\n        secondCurr,\n        date\n      } = this.state;\n      console.log(\"secondDD\", value);\n      this.setState({\n        secondCurr: value\n      });\n\n      if (firstCurr !== '' && {\n        value\n      } !== '') {\n        Axios.get(`https://api.ratesapi.io/api/latest?symbols=${value}&base=${firstCurr}`).then(res => {\n          console.log(\"res \", res);\n          this.setState({\n            exchangeData: res.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(this, \"firstValue\", event => {\n      console.log(\"firstValue\", event.target.value);\n      this.setState({\n        firstValue: event.target.value\n      });\n      const calc2 = event.target.value * this.state.exchangeData.rates[this.state.secondCurr];\n      console.log(\"calc2 \", calc2);\n      this.setState({\n        secondValue: calc2\n      });\n    });\n\n    _defineProperty(this, \"secondValue\", event => {\n      console.log(\"secondValue\", event.target.value);\n      this.setState({\n        secondValue: event.target.value\n      });\n      const calc1 = event.target.value / this.state.exchangeData.rates[this.state.secondCurr];\n      console.log(\"calc1 \", calc1);\n      this.setState({\n        firstValue: calc1\n      });\n    });\n\n    _defineProperty(this, \"onExchangeClick\", () => {\n      const {\n        firstCurr,\n        secondCurr,\n        firstValue,\n        secondValue\n      } = this.state;\n      let firstCurrConst = firstCurr;\n      let secondCurrConst = secondCurr;\n      let firstValueConst = firstValue;\n      let secondValueConst = secondValue;\n      this.setState({\n        firstCurr: secondCurrConst,\n        secondCurr: firstCurrConst,\n        firstValue: secondValueConst,\n        secondValue: firstValueConst\n      });\n    });\n\n    _defineProperty(this, \"moreConversions\", (x, y) => {\n      console.log(\"x,y \", x, y);\n    });\n\n    this.state = {\n      totalData: [],\n      options: [],\n      firstCurr: '',\n      secondCurr: '',\n      firstValue: 0,\n      secondValue: 0,\n      date: '',\n      exchangeData: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"header\");\n    const {\n      totalData\n    } = this.state;\n    const options = [];\n    let date = new Date();\n    date.setDate(date.getDate() - 1);\n    console.log(\"date \", date);\n    date = date.toISOString().split('T')[0];\n    console.log(\"after-date \", date);\n    this.setState({\n      date\n    });\n    Axios.get('https://restcountries.eu/rest/v2/all').then(({\n      data\n    }) => {\n      this.setState({\n        totalData: data\n      });\n      data.forEach((country, i) => {\n        options.push({\n          key: i,\n          text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\",\n          value: country.currencies[0].code\n        });\n      });\n      this.setState({\n        options\n      });\n    });\n  }\n\n  render() {\n    const {\n      firstCurr,\n      secondCurr\n    } = this.state;\n    console.log(\"home\");\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(Segment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(Segment, {\n      clearing: true,\n      inverted: true,\n      color: \"violet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(Dropdown, {\n      placeholder: \"select\",\n      options: this.state.options,\n      selection: true,\n      clearable: true,\n      search: true,\n      onChange: (e, {\n        value\n      }) => this.firstDD(e, {\n        value\n      }),\n      value: this.state.firstCurr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(Button, {\n      color: \"violet\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(FaExchangeAlt, {\n      onClick: this.onExchangeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, __jsx(Dropdown, {\n      placeholder: \"select\",\n      options: this.state.options,\n      selection: true,\n      clearable: true,\n      search: true,\n      onChange: this.secondDD,\n      value: this.state.secondCurr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))))), __jsx(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(Input, {\n      onChange: this.firstValue,\n      value: this.state.firstValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(Button, {\n      positive: true,\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(FaExchangeAlt, {\n      onClick: this.onExchangeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(Input, {\n      onChange: this.secondValue,\n      value: this.state.secondValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })))))), __jsx(Segment.Group, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, __jsx(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, __jsx(Header, {\n      attached: \"top\",\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Convert \", firstCurr, \" to   \", secondCurr), __jsx(Segment, {\n      attached: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, __jsx(Grid, {\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, firstCurr)), __jsx(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, secondCurr))), __jsx(Divider, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), this.moreConversions(firstCurr, secondCurr)))), __jsx(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, __jsx(Header, {\n      attached: \"top\",\n      textAlign: \"center\",\n      as: \"h3\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Convert \", secondCurr, \" to \", firstCurr), __jsx(Segment, {\n      attached: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, __jsx(Grid, {\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, secondCurr)), __jsx(Grid.Column, {\n      width: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, firstCurr))), __jsx(Divider, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapDispatchToProps = {};\nexport default withRouter(Home);","map":{"version":3,"sources":["D:/my-projects/civil/components/Home.js"],"names":["React","withRouter","connect","Dropdown","Menu","Segment","Grid","Container","Input","Header","Button","Divider","Axios","FaExchangeAlt","Home","Component","constructor","props","event","value","firstCurr","secondCurr","date","state","console","log","target","setState","get","then","res","exchangeData","data","catch","error","firstValue","calc2","rates","secondValue","calc1","firstCurrConst","secondCurrConst","firstValueConst","secondValueConst","x","y","totalData","options","componentDidMount","Date","setDate","getDate","toISOString","split","forEach","country","i","push","key","text","name","currencies","code","render","e","firstDD","onExchangeClick","secondDD","moreConversions","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Header, Button, Divider } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\nimport { FaExchangeAlt } from \"react-icons/fa\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalData: [],\r\n            options: [],\r\n            firstCurr: '',\r\n            secondCurr: '',\r\n            firstValue: 0,\r\n            secondValue: 0,\r\n            date: '',\r\n            exchangeData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"header\");\r\n        const { totalData } = this.state;\r\n        const options = [];\r\n\r\n        let date = new Date();\r\n        date.setDate(date.getDate() - 1);\r\n        console.log(\"date \", date);\r\n        date = date.toISOString().split('T')[0];\r\n        console.log(\"after-date \", date);\r\n        this.setState({\r\n            date\r\n        })\r\n        Axios.get('https://restcountries.eu/rest/v2/all').then(({ data }) => {\r\n            this.setState({\r\n                totalData: data\r\n            });\r\n            data.forEach((country, i) => {\r\n                options.push(\r\n                    {\r\n                        key: i, text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\", value: country.currencies[0].code\r\n                    }\r\n                )\r\n            })\r\n            this.setState({\r\n                options\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    firstDD = (event, { value }) => {\r\n        const { firstCurr, secondCurr, date } = this.state;\r\n        console.log(\"firstDD\", event.target, { value });\r\n        this.setState({\r\n            firstCurr: value\r\n        })\r\n        if ({ value } !== '' && secondCurr !== '') {\r\n            Axios.get(`https://api.exchangeratesapi.io/latest?symbols=${secondCurr}&base=${value}`\r\n            ).then((res) => {\r\n                console.log(\"res \", res);\r\n                this.setState({\r\n                    exchangeData: res.data\r\n                })\r\n            })\r\n                .catch((error) => { console.log(error); });\r\n        }\r\n    }\r\n\r\n    secondDD = (event, { value }) => {\r\n        const { firstCurr, secondCurr, date } = this.state;\r\n        console.log(\"secondDD\", value);\r\n        this.setState({\r\n            secondCurr: value\r\n        })\r\n\r\n        if (firstCurr !== '' && { value } !== '') {\r\n            Axios.get(\r\n                `https://api.ratesapi.io/api/latest?symbols=${value}&base=${firstCurr}`\r\n            ).then((res) => {\r\n                console.log(\"res \", res);\r\n                this.setState({\r\n                    exchangeData: res.data\r\n                })\r\n            })\r\n                .catch((error) => { console.log(error); });\r\n        }\r\n    }\r\n\r\n    firstValue = (event) => {\r\n        console.log(\"firstValue\", event.target.value);\r\n        this.setState({\r\n            firstValue: event.target.value\r\n        })\r\n        const calc2 = (event.target.value) * (this.state.exchangeData.rates[this.state.secondCurr]);\r\n        console.log(\"calc2 \", calc2)\r\n        this.setState({\r\n            secondValue: calc2\r\n        })\r\n    }\r\n\r\n    secondValue = (event) => {\r\n        console.log(\"secondValue\", event.target.value);\r\n        this.setState({\r\n            secondValue: event.target.value\r\n        })\r\n        const calc1 = (event.target.value) / (this.state.exchangeData.rates[this.state.secondCurr]);\r\n        console.log(\"calc1 \", calc1);\r\n        this.setState({\r\n            firstValue: calc1\r\n        })\r\n    }\r\n\r\n    onExchangeClick = () => {\r\n        const { firstCurr, secondCurr, firstValue, secondValue } = this.state;\r\n\r\n        let firstCurrConst = firstCurr;\r\n        let secondCurrConst = secondCurr;\r\n        let firstValueConst = firstValue;\r\n        let secondValueConst = secondValue;\r\n        this.setState({\r\n            firstCurr: secondCurrConst, secondCurr: firstCurrConst, firstValue: secondValueConst, secondValue: firstValueConst\r\n        })\r\n    }\r\n\r\n    moreConversions = (x,y) => {\r\n        console.log(\"x,y \", x,y)\r\n    }\r\n\r\n    render() {\r\n        const { firstCurr, secondCurr } = this.state;\r\n        console.log(\"home\")\r\n        return (\r\n            <Container>\r\n                <Segment.Group>\r\n                    <Segment clearing inverted color=\"violet\">\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Dropdown placeholder=\"select\" options={this.state.options} selection clearable search onChange={(e, { value }) => this.firstDD(e, { value })} value={this.state.firstCurr} />\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" width={2}>\r\n                                    <Button color=\"violet\" icon>\r\n                                        <FaExchangeAlt onClick={this.onExchangeClick} />\r\n                                    </Button>\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Dropdown placeholder=\"select\" options={this.state.options} selection clearable search onChange={this.secondDD} value={this.state.secondCurr} />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Input onChange={this.firstValue} value={this.state.firstValue} />\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" width={2}>\r\n                                    <Button positive icon>\r\n                                        <FaExchangeAlt onClick={this.onExchangeClick} />\r\n                                    </Button>\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Input onChange={this.secondValue} value={this.state.secondValue} />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n                <Segment.Group horizontal>\r\n                    <Segment>\r\n                        <Header attached='top' as='h3' textAlign='center' block>\r\n                            Convert {firstCurr} to   {secondCurr} \r\n                        </Header>\r\n                        <Segment attached>\r\n                            <Grid divided>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                        {firstCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                        {secondCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Divider fluid />\r\n                                {this.moreConversions(firstCurr, secondCurr)}\r\n                            </Grid>\r\n                        </Segment>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Header attached='top' textAlign='center' as='h3' block>\r\n                            Convert {secondCurr} to {firstCurr} \r\n                        </Header>\r\n                        <Segment attached>\r\n                            <Grid divided>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                        {secondCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                        {firstCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Divider fluid />\r\n                            </Grid>\r\n                    </Segment>\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = {};\r\nexport default withRouter(Home);\r\n"]},"metadata":{},"sourceType":"module"}