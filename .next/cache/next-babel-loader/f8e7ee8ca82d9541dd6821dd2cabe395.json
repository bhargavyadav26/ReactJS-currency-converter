{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\my-projects\\\\civil\\\\components\\\\Home.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Icon, Button } from 'semantic-ui-react';\nimport Axios from 'axios';\nimport { FaExchangeAlt } from \"react-icons/fa\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"firstDD\", event => {\n      console.log(\"firstDD\", event);\n    });\n\n    _defineProperty(this, \"secondDD\", event => {\n      console.log(\"secondDD\", event);\n    });\n\n    this.state = {\n      totalData: [],\n      options: [],\n      firstCurr: '',\n      secondCurr: '',\n      firstValue: 0,\n      secondValue: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"header\");\n    const {\n      totalData\n    } = this.state;\n    const options = [];\n    Axios.get('https://restcountries.eu/rest/v2/all').then(({\n      data\n    }) => {\n      this.setState({\n        totalData: data\n      });\n      data.forEach((country, i) => {\n        options.push({\n          key: i,\n          text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\",\n          value: country.currencies[0].code\n        });\n      });\n      this.setState({\n        options\n      });\n    });\n  }\n\n  render() {\n    console.log(\"home\");\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Segment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(Segment, {\n      clearing: true,\n      inverted: true,\n      color: \"violet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Dropdown, {\n      placeholder: \"select\",\n      options: this.state.options,\n      selection: true,\n      clearable: true,\n      search: true,\n      onChange: this.firstDD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(FaExchangeAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(Dropdown, {\n      placeholder: \"select\",\n      options: this.state.options,\n      selection: true,\n      clearable: true,\n      search: true,\n      onChange: this.secondDD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))), __jsx(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      width: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Button, {\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Convert\")), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst options = [{\n  key: 1,\n  text: 'Feet',\n  value: 1\n}, {\n  key: 2,\n  text: 'Meter',\n  value: 2\n}, {\n  key: 3,\n  text: 'Inch',\n  value: 3\n}];\nconst mapDispatchToProps = {};\nexport default withRouter(Home);","map":{"version":3,"sources":["D:/my-projects/civil/components/Home.js"],"names":["React","withRouter","connect","Dropdown","Menu","Segment","Grid","Container","Input","Icon","Button","Axios","FaExchangeAlt","Home","Component","constructor","props","event","console","log","state","totalData","options","firstCurr","secondCurr","firstValue","secondValue","componentDidMount","get","then","data","setState","forEach","country","i","push","key","text","name","currencies","code","value","render","firstDD","secondDD","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Icon, Button } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\nimport { FaExchangeAlt } from \"react-icons/fa\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalData: [],\r\n            options: [],\r\n            firstCurr: '',\r\n            secondCurr: '',\r\n            firstValue: 0,\r\n            secondValue: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"header\");\r\n        const { totalData } = this.state;\r\n        const options = [];\r\n        Axios.get('https://restcountries.eu/rest/v2/all').then(({ data }) => {\r\n            this.setState({\r\n                totalData: data\r\n            });\r\n            data.forEach((country, i) => {\r\n                options.push(\r\n                    {\r\n                        key: i, text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\", value: country.currencies[0].code\r\n                    }\r\n                )\r\n            })\r\n            this.setState({\r\n                options\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    firstDD = (event) => {\r\n        console.log(\"firstDD\", event);\r\n    }\r\n\r\n    secondDD = (event) => {\r\n        console.log(\"secondDD\", event);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"home\")\r\n        return (\r\n            <Container>\r\n                <Segment.Group>\r\n                <Segment clearing inverted color=\"violet\">\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column textAlign=\"center\" width={7}>\r\n                                <Dropdown placeholder=\"select\" options={this.state.options} selection clearable search onChange={this.firstDD} />\r\n                            </Grid.Column>\r\n                            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" width={2}>\r\n                                <FaExchangeAlt />\r\n                            </Grid.Column>\r\n                            <Grid.Column textAlign=\"center\" width={7}>\r\n                                <Dropdown placeholder=\"select\" options={this.state.options} selection clearable search onChange={this.secondDD} />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n                <Segment>\r\n                <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column textAlign=\"center\" width={7}>\r\n                                <Input />\r\n                            </Grid.Column>\r\n                            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" width={2}>\r\n                                <Button primary>Convert</Button>\r\n                            </Grid.Column>\r\n                            <Grid.Column textAlign=\"center\" width={7}>\r\n                                <Input />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n                </Segment.Group>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst options = [\r\n    { key: 1, text: 'Feet', value: 1 },\r\n    { key: 2, text: 'Meter', value: 2 },\r\n    { key: 3, text: 'Inch', value: 3 },\r\n]\r\nconst mapDispatchToProps = {};\r\nexport default withRouter(Home);\r\n"]},"metadata":{},"sourceType":"module"}