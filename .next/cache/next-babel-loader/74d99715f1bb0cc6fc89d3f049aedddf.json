{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Header, Button, Divider } from 'semantic-ui-react';\nimport Axios from 'axios';\nimport { FaExchangeAlt } from \"react-icons/fa\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"firstDD\", function (event, _ref) {\n      var value = _ref.value;\n      var _this$state = _this.state,\n          firstCurr = _this$state.firstCurr,\n          secondCurr = _this$state.secondCurr,\n          date = _this$state.date;\n      console.log(\"firstDD\", event.target, {\n        value: value\n      });\n\n      _this.setState({\n        firstCurr: value\n      });\n\n      if ({\n        value: value\n      } !== '' && secondCurr !== '') {\n        Axios.get(\"https://api.ratesapi.io/api/latest?symbols=\".concat(secondCurr, \"&base=\").concat(value)).then(function (res) {\n          console.log(\"res \", res);\n\n          _this.setState({\n            exchangeData: res.data\n          });\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"secondDD\", function (event, _ref2) {\n      var value = _ref2.value;\n      var _this$state2 = _this.state,\n          firstCurr = _this$state2.firstCurr,\n          secondCurr = _this$state2.secondCurr,\n          date = _this$state2.date;\n      console.log(\"secondDD\", value);\n\n      _this.setState({\n        secondCurr: value\n      });\n\n      if (firstCurr !== '' && {\n        value: value\n      } !== '') {\n        Axios.get(\"https://api.ratesapi.io/api/latest?symbols=\".concat(value, \"&base=\").concat(firstCurr)).then(function (res) {\n          console.log(\"res \", res);\n\n          _this.setState({\n            exchangeData: res.data\n          });\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"firstValue\", function (event) {\n      console.log(\"firstValue\", event.target.value);\n\n      _this.setState({\n        firstValue: event.target.value\n      });\n\n      var calc2 = event.target.value * _this.state.exchangeData.rates[_this.state.secondCurr];\n      console.log(\"calc2 \", calc2);\n\n      _this.setState({\n        secondValue: calc2\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"secondValue\", function (event) {\n      console.log(\"secondValue\", event.target.value);\n\n      _this.setState({\n        secondValue: event.target.value\n      });\n\n      var calc1 = event.target.value / _this.state.exchangeData.rates[_this.state.secondCurr];\n      console.log(\"calc1 \", calc1);\n\n      _this.setState({\n        firstValue: calc1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExchangeClick\", function () {\n      var _this$state3 = _this.state,\n          firstCurr = _this$state3.firstCurr,\n          secondCurr = _this$state3.secondCurr,\n          firstValue = _this$state3.firstValue,\n          secondValue = _this$state3.secondValue;\n\n      _this.setState({\n        spinner: true\n      });\n\n      var firstCurrConst = firstCurr;\n      var secondCurrConst = secondCurr;\n      var firstValueConst = firstValue;\n      var secondValueConst = secondValue;\n      Axios.get(\"https://api.ratesapi.io/api/latest?symbols=\".concat(firstCurr, \"&base=\").concat(secondCurr)).then(function (res) {\n        console.log(\"res \", res);\n\n        _this.setState({\n          exchangeData: res.data,\n          spinner: false\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n\n      _this.setState({\n        firstCurr: secondCurrConst,\n        secondCurr: firstCurrConst,\n        firstValue: secondValueConst,\n        secondValue: firstValueConst\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"moreConversions\", function (x, y, multiplyValue) {\n      console.log(\"x,y \", x, y, multiplyValue);\n      var num = [1, 5, 10, 25, 50, 100, 500, 1000, 5000, 10000];\n      var loop = [];\n\n      for (var i = 0; i < num.length; i++) {\n        loop.push(__jsx(Grid.Row, {\n          textAlign: \"center\",\n          key: i\n        }, __jsx(Grid.Column, {\n          width: 8\n        }, __jsx(Header, null, num[i], \"  \", x)), __jsx(Grid.Column, {\n          width: 8\n        }, __jsx(Header, null, (num[i] * multiplyValue).toFixed(3)))));\n      }\n\n      return loop;\n    });\n\n    _this.state = {\n      totalData: [],\n      options: [],\n      firstCurr: '',\n      secondCurr: '',\n      firstValue: 0,\n      secondValue: 0,\n      date: '',\n      exchangeData: [],\n      spinner: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"header\");\n      var totalData = this.state.totalData;\n      var options = [];\n      var date = new Date();\n      date.setDate(date.getDate() - 1);\n      console.log(\"date \", date);\n      date = date.toISOString().split('T')[0];\n      console.log(\"after-date \", date);\n      this.setState({\n        date: date\n      });\n      Axios.get('https://restcountries.eu/rest/v2/all').then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          totalData: data\n        });\n\n        data.forEach(function (country, i) {\n          options.push({\n            key: i,\n            text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\",\n            value: country.currencies[0].code\n          });\n        });\n\n        _this2.setState({\n          options: options\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          firstCurr = _this$state4.firstCurr,\n          secondCurr = _this$state4.secondCurr,\n          exchangeData = _this$state4.exchangeData;\n      console.log(\"home\");\n      return __jsx(Container, null, __jsx(Segment.Group, null, __jsx(Segment, {\n        clearing: true,\n        inverted: true,\n        color: \"violet\"\n      }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7\n      }, __jsx(Dropdown, {\n        placeholder: \"select\",\n        options: this.state.options,\n        selection: true,\n        clearable: true,\n        search: true,\n        onChange: function onChange(e, _ref4) {\n          var value = _ref4.value;\n          return _this3.firstDD(e, {\n            value: value\n          });\n        },\n        value: this.state.firstCurr\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        width: 2\n      }, __jsx(FaExchangeAlt, {\n        onClick: this.onExchangeClick,\n        style: {\n          cursor: \"pointer\"\n        }\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7\n      }, __jsx(Dropdown, {\n        placeholder: \"select\",\n        options: this.state.options,\n        selection: true,\n        clearable: true,\n        search: true,\n        onChange: this.secondDD,\n        value: this.state.secondCurr\n      }))))), __jsx(Segment, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7\n      }, __jsx(Input, {\n        onChange: this.firstValue,\n        value: this.state.firstValue\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        width: 2\n      }, __jsx(FaExchangeAlt, {\n        onClick: this.onExchangeClick,\n        style: {\n          cursor: \"pointer\"\n        }\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7\n      }, __jsx(Input, {\n        onChange: this.secondValue,\n        value: this.state.secondValue\n      })))))), this.state.spinner ? __jsx(Segment, {\n        loading: true\n      }) : __jsx(Segment.Group, {\n        horizontal: true\n      }, __jsx(Segment, null, firstCurr !== '' && secondCurr !== '' ? __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true\n      }, \"Convert \", firstCurr, \" to \", secondCurr) : __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true\n      }, \"Select any 2 currencies\"), __jsx(Segment, {\n        attached: true\n      }, __jsx(Grid, {\n        divided: true\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, firstCurr)), __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, secondCurr))), __jsx(Divider, null), exchangeData.rates ? this.moreConversions(firstCurr, secondCurr, exchangeData.rates[this.state.secondCurr]) : null))), __jsx(Segment, null, firstCurr !== '' && secondCurr !== '' ? __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true\n      }, \"Convert \", firstCurr, \" to \", secondCurr) : __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true\n      }, \"Select any 2 currencies\"), __jsx(Segment, {\n        attached: true\n      }, __jsx(Grid, {\n        divided: true\n      }, __jsx(Grid.Row, {\n        textAlign: \"center\"\n      }, __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, secondCurr)), __jsx(Grid.Column, {\n        width: 8\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\"\n      }, firstCurr))), __jsx(Divider, null), exchangeData.rates ? this.moreConversions(firstCurr, secondCurr, 1 / exchangeData.rates[this.state.secondCurr]) : null)))));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar mapDispatchToProps = {};\nexport default withRouter(Home);","map":null,"metadata":{},"sourceType":"module"}