{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Header, Button, Divider } from 'semantic-ui-react';\nimport Axios from 'axios';\nimport { FaExchangeAlt } from \"react-icons/fa\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"firstDD\", (event, {\n      value\n    }) => {\n      const {\n        firstCurr,\n        secondCurr,\n        date\n      } = this.state;\n      console.log(\"firstDD\", event.target, {\n        value\n      });\n      this.setState({\n        firstCurr: value\n      });\n\n      if ({\n        value\n      } !== '' && secondCurr !== '') {\n        Axios.get(`https://api.ratesapi.io/api/latest?symbols=${secondCurr}&base=${value}`).then(res => {\n          console.log(\"res \", res);\n          this.setState({\n            exchangeData: res.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(this, \"secondDD\", (event, {\n      value\n    }) => {\n      const {\n        firstCurr,\n        secondCurr,\n        date\n      } = this.state;\n      console.log(\"secondDD\", value);\n      this.setState({\n        secondCurr: value\n      });\n\n      if (firstCurr !== '' && {\n        value\n      } !== '') {\n        Axios.get(`https://api.ratesapi.io/api/latest?symbols=${value}&base=${firstCurr}`).then(res => {\n          console.log(\"res \", res);\n          this.setState({\n            exchangeData: res.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(this, \"firstValue\", event => {\n      console.log(\"firstValue\", event.target.value);\n      this.setState({\n        firstValue: event.target.value\n      });\n      const calc2 = event.target.value * this.state.exchangeData.rates[this.state.secondCurr];\n      console.log(\"calc2 \", calc2);\n      this.setState({\n        secondValue: calc2\n      });\n    });\n\n    _defineProperty(this, \"secondValue\", event => {\n      console.log(\"secondValue\", event.target.value);\n      this.setState({\n        secondValue: event.target.value\n      });\n      const calc1 = event.target.value / this.state.exchangeData.rates[this.state.secondCurr];\n      console.log(\"calc1 \", calc1);\n      this.setState({\n        firstValue: calc1\n      });\n    });\n\n    _defineProperty(this, \"onExchangeClick\", () => {\n      const {\n        firstCurr,\n        secondCurr,\n        firstValue,\n        secondValue\n      } = this.state;\n      this.setState({\n        spinner: true\n      });\n      let firstCurrConst = firstCurr;\n      let secondCurrConst = secondCurr;\n      let firstValueConst = firstValue;\n      let secondValueConst = secondValue;\n      Axios.get(`https://api.ratesapi.io/api/latest?symbols=${firstCurr}&base=${secondCurr}`).then(res => {\n        console.log(\"res \", res);\n        this.setState({\n          exchangeData: res.data,\n          spinner: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        firstCurr: secondCurrConst,\n        secondCurr: firstCurrConst,\n        firstValue: secondValueConst,\n        secondValue: firstValueConst\n      });\n    });\n\n    _defineProperty(this, \"moreConversions\", (x, y, multiplyValue) => {\n      console.log(\"x,y \", x, y, multiplyValue);\n      const num = [1, 5, 10, 25, 50, 100, 500, 1000, 5000, 10000];\n      const loop = [];\n\n      for (let i = 0; i < num.length; i++) {\n        loop.push(__jsx(Grid.Row, {\n          textAlign: \"center\",\n          key: i\n        }, __jsx(Grid.Column, {\n          width: 8\n        }, __jsx(Header, null, num[i], \"  \", x)), __jsx(Grid.Column, {\n          width: 8\n        }, __jsx(Header, null, (num[i] * multiplyValue).toFixed(3)))));\n      }\n\n      return loop;\n    });\n\n    this.state = {\n      totalData: [],\n      options: [],\n      firstCurr: '',\n      secondCurr: '',\n      firstValue: 0,\n      secondValue: 0,\n      date: '',\n      exchangeData: [],\n      spinner: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"header\");\n    const {\n      totalData\n    } = this.state;\n    const options = [];\n    let date = new Date();\n    date.setDate(date.getDate() - 1);\n    console.log(\"date \", date);\n    date = date.toISOString().split('T')[0];\n    console.log(\"after-date \", date);\n    this.setState({\n      date\n    });\n    Axios.get('https://restcountries.eu/rest/v2/all').then(({\n      data\n    }) => {\n      this.setState({\n        totalData: data\n      });\n      data.forEach((country, i) => {\n        options.push({\n          key: i,\n          text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\",\n          value: country.currencies[0].code\n        });\n      });\n      this.setState({\n        options\n      });\n    });\n  }\n\n  render() {\n    const {\n      firstCurr,\n      secondCurr,\n      exchangeData\n    } = this.state;\n    console.log(\"home\");\n    return __jsx(Container, null, __jsx(Segment.Group, null, __jsx(Segment, {\n      clearing: true,\n      inverted: true,\n      color: \"violet\"\n    }, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7\n    }, __jsx(Dropdown, {\n      placeholder: \"select\",\n      options: this.state.options,\n      selection: true,\n      clearable: true,\n      search: true,\n      onChange: (e, {\n        value\n      }) => this.firstDD(e, {\n        value\n      }),\n      value: this.state.firstCurr\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      width: 2\n    }, __jsx(FaExchangeAlt, {\n      onClick: this.onExchangeClick,\n      style: {\n        cursor: \"pointer\"\n      }\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7\n    }, __jsx(Dropdown, {\n      placeholder: \"select\",\n      options: this.state.options,\n      selection: true,\n      clearable: true,\n      search: true,\n      onChange: this.secondDD,\n      value: this.state.secondCurr\n    }))))), __jsx(Segment, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7\n    }, __jsx(Input, {\n      onChange: this.firstValue,\n      value: this.state.firstValue\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      width: 2\n    }, __jsx(FaExchangeAlt, {\n      onClick: this.onExchangeClick,\n      style: {\n        cursor: \"pointer\"\n      }\n    })), __jsx(Grid.Column, {\n      textAlign: \"center\",\n      width: 7\n    }, __jsx(Input, {\n      onChange: this.secondValue,\n      value: this.state.secondValue\n    })))))), this.state.spinner ? __jsx(Segment, {\n      loading: true\n    }) : __jsx(Segment.Group, {\n      horizontal: true\n    }, __jsx(Segment, null, firstCurr !== '' && secondCurr !== '' ? __jsx(Header, {\n      attached: \"top\",\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true\n    }, \"Convert \", firstCurr, \" to \", secondCurr) : __jsx(Header, {\n      attached: \"top\",\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true\n    }, \"Select any 2 currencies\"), __jsx(Segment, {\n      attached: true\n    }, __jsx(Grid, {\n      divided: true\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\"\n    }, firstCurr)), __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\"\n    }, secondCurr))), __jsx(Divider, null), exchangeData.rates ? this.moreConversions(firstCurr, secondCurr, exchangeData.rates[this.state.secondCurr]) : null))), __jsx(Segment, null, firstCurr !== '' && secondCurr !== '' ? __jsx(Header, {\n      attached: \"top\",\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true\n    }, \"Convert \", firstCurr, \" to \", secondCurr) : __jsx(Header, {\n      attached: \"top\",\n      as: \"h3\",\n      textAlign: \"center\",\n      block: true\n    }, \"Select any 2 currencies\"), __jsx(Segment, {\n      attached: true\n    }, __jsx(Grid, {\n      divided: true\n    }, __jsx(Grid.Row, {\n      textAlign: \"center\"\n    }, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\"\n    }, secondCurr)), __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Header, {\n      as: \"h3\",\n      textAlign: \"center\"\n    }, firstCurr))), __jsx(Divider, null), exchangeData.rates ? this.moreConversions(firstCurr, secondCurr, 1 / exchangeData.rates[this.state.secondCurr]) : null)))));\n  }\n\n}\n\nconst mapDispatchToProps = {};\nexport default withRouter(Home);","map":null,"metadata":{},"sourceType":"module"}