{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\my-projects\\\\civil\\\\components\\\\Home.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Header, Button, Divider } from 'semantic-ui-react';\nimport Axios from 'axios';\nimport { FaExchangeAlt } from \"react-icons/fa\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"firstDD\", function (event, _ref) {\n      var value = _ref.value;\n      var _this$state = _this.state,\n          firstCurr = _this$state.firstCurr,\n          secondCurr = _this$state.secondCurr,\n          date = _this$state.date;\n      console.log(\"firstDD\", event.target, {\n        value: value\n      });\n\n      _this.setState({\n        firstCurr: value\n      });\n\n      if ({\n        value: value\n      } !== '' && secondCurr !== '') {\n        Axios.get(\"https://api.ratesapi.io/api/latest?symbols=\".concat(secondCurr, \"&base=\").concat(value)).then(function (res) {\n          console.log(\"res \", res);\n\n          _this.setState({\n            exchangeData: res.data\n          });\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"secondDD\", function (event, _ref2) {\n      var value = _ref2.value;\n      var _this$state2 = _this.state,\n          firstCurr = _this$state2.firstCurr,\n          secondCurr = _this$state2.secondCurr,\n          date = _this$state2.date;\n      console.log(\"secondDD\", value);\n\n      _this.setState({\n        secondCurr: value\n      });\n\n      if (firstCurr !== '' && {\n        value: value\n      } !== '') {\n        Axios.get(\"https://api.ratesapi.io/api/latest?symbols=\".concat(value, \"&base=\").concat(firstCurr)).then(function (res) {\n          console.log(\"res \", res);\n\n          _this.setState({\n            exchangeData: res.data\n          });\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"firstValue\", function (event) {\n      console.log(\"firstValue\", event.target.value);\n\n      _this.setState({\n        firstValue: event.target.value\n      });\n\n      var calc2 = event.target.value * _this.state.exchangeData.rates[_this.state.secondCurr];\n      console.log(\"calc2 \", calc2);\n\n      _this.setState({\n        secondValue: calc2\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"secondValue\", function (event) {\n      console.log(\"secondValue\", event.target.value);\n\n      _this.setState({\n        secondValue: event.target.value\n      });\n\n      var calc1 = event.target.value / _this.state.exchangeData.rates[_this.state.secondCurr];\n      console.log(\"calc1 \", calc1);\n\n      _this.setState({\n        firstValue: calc1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExchangeClick\", function () {\n      var _this$state3 = _this.state,\n          firstCurr = _this$state3.firstCurr,\n          secondCurr = _this$state3.secondCurr,\n          firstValue = _this$state3.firstValue,\n          secondValue = _this$state3.secondValue;\n\n      _this.setState({\n        spinner: true\n      });\n\n      var firstCurrConst = firstCurr;\n      var secondCurrConst = secondCurr;\n      var firstValueConst = firstValue;\n      var secondValueConst = secondValue;\n      Axios.get(\"https://api.ratesapi.io/api/latest?symbols=\".concat(secondCurr, \"&base=\").concat(firstCurr)).then(function (res) {\n        console.log(\"res \", res);\n\n        _this.setState({\n          exchangeData: res.data,\n          spinner: false\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n\n      _this.setState({\n        firstCurr: secondCurrConst,\n        secondCurr: firstCurrConst,\n        firstValue: secondValueConst,\n        secondValue: firstValueConst\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"moreConversions\", function (x, y, multiplyValue) {\n      console.log(\"x,y \", x, y, multiplyValue);\n      var num = [1, 5, 10, 25, 50, 100, 500, 1000, 5000, 10000];\n      var loop = [];\n\n      for (var i = 0; i < num.length; i++) {\n        loop.push(__jsx(Grid.Row, {\n          textAlign: \"center\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, __jsx(Grid.Column, {\n          width: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, __jsx(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, num[i], \"  \", x)), __jsx(Grid.Column, {\n          width: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, __jsx(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, (num[i] * multiplyValue).toFixed(3)))));\n      }\n\n      return loop;\n    });\n\n    _this.state = {\n      totalData: [],\n      options: [],\n      firstCurr: '',\n      secondCurr: '',\n      firstValue: 0,\n      secondValue: 0,\n      date: '',\n      exchangeData: [],\n      spinner: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"header\");\n      var totalData = this.state.totalData;\n      var options = [];\n      var date = new Date();\n      date.setDate(date.getDate() - 1);\n      console.log(\"date \", date);\n      date = date.toISOString().split('T')[0];\n      console.log(\"after-date \", date);\n      this.setState({\n        date: date\n      });\n      Axios.get('https://restcountries.eu/rest/v2/all').then(function (_ref3) {\n        var data = _ref3.data;\n\n        _this2.setState({\n          totalData: data\n        });\n\n        data.forEach(function (country, i) {\n          options.push({\n            key: i,\n            text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\",\n            value: country.currencies[0].code\n          });\n        });\n\n        _this2.setState({\n          options: options\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          firstCurr = _this$state4.firstCurr,\n          secondCurr = _this$state4.secondCurr,\n          exchangeData = _this$state4.exchangeData;\n      console.log(\"home\");\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __jsx(Segment.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, __jsx(Segment, {\n        clearing: true,\n        inverted: true,\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, __jsx(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, __jsx(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(Dropdown, {\n        placeholder: \"select\",\n        options: this.state.options,\n        selection: true,\n        clearable: true,\n        search: true,\n        onChange: function onChange(e, _ref4) {\n          var value = _ref4.value;\n          return _this3.firstDD(e, {\n            value: value\n          });\n        },\n        value: this.state.firstCurr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        width: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, __jsx(FaExchangeAlt, {\n        onClick: this.onExchangeClick,\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, __jsx(Dropdown, {\n        placeholder: \"select\",\n        options: this.state.options,\n        selection: true,\n        clearable: true,\n        search: true,\n        onChange: this.secondDD,\n        value: this.state.secondCurr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))))), __jsx(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, __jsx(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, __jsx(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, __jsx(Input, {\n        onChange: this.firstValue,\n        value: this.state.firstValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        width: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, __jsx(FaExchangeAlt, {\n        onClick: this.onExchangeClick,\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), __jsx(Grid.Column, {\n        textAlign: \"center\",\n        width: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, __jsx(Input, {\n        onChange: this.secondValue,\n        value: this.state.secondValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))))), __jsx(Segment.Group, {\n        horizontal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, __jsx(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, firstCurr !== '' && secondCurr !== '' ? __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Convert \", firstCurr, \" to \", secondCurr) : __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Select any 2 currencies\"), __jsx(Segment, {\n        attached: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, this.state.spinner ? __jsx(Segment, {\n        loading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }) : __jsx(Grid, {\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, __jsx(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, firstCurr)), __jsx(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, secondCurr))), __jsx(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), exchangeData.rates ? this.moreConversions(firstCurr, secondCurr, exchangeData.rates[this.state.secondCurr]) : null))), __jsx(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, firstCurr !== '' && secondCurr !== '' ? __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Convert \", firstCurr, \" to \", secondCurr) : __jsx(Header, {\n        attached: \"top\",\n        as: \"h3\",\n        textAlign: \"center\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Select any 2 currencies\"), __jsx(Segment, {\n        attached: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, __jsx(Grid, {\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, __jsx(Grid.Row, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, secondCurr)), __jsx(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, __jsx(Header, {\n        as: \"h3\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, firstCurr))), __jsx(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), exchangeData.rates ? this.moreConversions(firstCurr, secondCurr, 1 / exchangeData.rates[this.state.secondCurr]) : null)))));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nvar mapDispatchToProps = {};\nexport default withRouter(Home);","map":{"version":3,"sources":["D:/my-projects/civil/components/Home.js"],"names":["React","withRouter","connect","Dropdown","Menu","Segment","Grid","Container","Input","Header","Button","Divider","Axios","FaExchangeAlt","Home","props","event","value","state","firstCurr","secondCurr","date","console","log","target","setState","get","then","res","exchangeData","data","error","firstValue","calc2","rates","secondValue","calc1","spinner","firstCurrConst","secondCurrConst","firstValueConst","secondValueConst","x","y","multiplyValue","num","loop","i","length","push","toFixed","totalData","options","Date","setDate","getDate","toISOString","split","forEach","country","key","text","name","currencies","code","e","firstDD","onExchangeClick","cursor","secondDD","moreConversions","Component","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown, Menu, Segment, Grid, Container, Input, Header, Button, Divider } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\nimport { FaExchangeAlt } from \"react-icons/fa\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalData: [],\r\n            options: [],\r\n            firstCurr: '',\r\n            secondCurr: '',\r\n            firstValue: 0,\r\n            secondValue: 0,\r\n            date: '',\r\n            exchangeData: [],\r\n            spinner: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"header\");\r\n        const { totalData } = this.state;\r\n        const options = [];\r\n\r\n        let date = new Date();\r\n        date.setDate(date.getDate() - 1);\r\n        console.log(\"date \", date);\r\n        date = date.toISOString().split('T')[0];\r\n        console.log(\"after-date \", date);\r\n        this.setState({\r\n            date\r\n        })\r\n        Axios.get('https://restcountries.eu/rest/v2/all').then(({ data }) => {\r\n            this.setState({\r\n                totalData: data\r\n            });\r\n            data.forEach((country, i) => {\r\n                options.push(\r\n                    {\r\n                        key: i, text: country.name + \" \" + \"(\" + country.currencies[0].code + \")\", value: country.currencies[0].code\r\n                    }\r\n                )\r\n            })\r\n            this.setState({\r\n                options\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    firstDD = (event, { value }) => {\r\n        const { firstCurr, secondCurr, date } = this.state;\r\n        console.log(\"firstDD\", event.target, { value });\r\n        this.setState({\r\n            firstCurr: value\r\n        })\r\n        if ({ value } !== '' && secondCurr !== '') {\r\n            Axios.get(`https://api.ratesapi.io/api/latest?symbols=${secondCurr}&base=${value}`\r\n            ).then((res) => {\r\n                console.log(\"res \", res);\r\n                this.setState({\r\n                    exchangeData: res.data\r\n                })\r\n            })\r\n                .catch((error) => { console.log(error); });\r\n        }\r\n    }\r\n\r\n    secondDD = (event, { value }) => {\r\n        const { firstCurr, secondCurr, date } = this.state;\r\n        console.log(\"secondDD\", value);\r\n        this.setState({\r\n            secondCurr: value\r\n        })\r\n\r\n        if (firstCurr !== '' && { value } !== '') {\r\n            Axios.get(\r\n                `https://api.ratesapi.io/api/latest?symbols=${value}&base=${firstCurr}`\r\n            ).then((res) => {\r\n                console.log(\"res \", res);\r\n                this.setState({\r\n                    exchangeData: res.data\r\n                })\r\n            })\r\n                .catch((error) => { console.log(error); });\r\n        }\r\n    }\r\n\r\n    firstValue = (event) => {\r\n        console.log(\"firstValue\", event.target.value);\r\n        this.setState({\r\n            firstValue: event.target.value\r\n        })\r\n        const calc2 = (event.target.value) * (this.state.exchangeData.rates[this.state.secondCurr]);\r\n        console.log(\"calc2 \", calc2)\r\n        this.setState({\r\n            secondValue: calc2\r\n        })\r\n    }\r\n\r\n    secondValue = (event) => {\r\n        console.log(\"secondValue\", event.target.value);\r\n        this.setState({\r\n            secondValue: event.target.value\r\n        })\r\n        const calc1 = (event.target.value) / (this.state.exchangeData.rates[this.state.secondCurr]);\r\n        console.log(\"calc1 \", calc1);\r\n        this.setState({\r\n            firstValue: calc1\r\n        })\r\n    }\r\n\r\n    onExchangeClick = () => {\r\n        const { firstCurr, secondCurr, firstValue, secondValue } = this.state;\r\n        this.setState({\r\n            spinner: true\r\n        })\r\n        let firstCurrConst = firstCurr;\r\n        let secondCurrConst = secondCurr;\r\n        let firstValueConst = firstValue;\r\n        let secondValueConst = secondValue;\r\n\r\n        Axios.get(`https://api.ratesapi.io/api/latest?symbols=${secondCurr}&base=${firstCurr}`\r\n            ).then((res) => {\r\n                console.log(\"res \", res);\r\n                this.setState({\r\n                    exchangeData: res.data, spinner: false\r\n                })\r\n            })\r\n                .catch((error) => { console.log(error); });\r\n\r\n\r\n        this.setState({\r\n            firstCurr: secondCurrConst, secondCurr: firstCurrConst, firstValue: secondValueConst, secondValue: firstValueConst\r\n        })\r\n    }\r\n\r\n    moreConversions = (x, y, multiplyValue) => {\r\n        console.log(\"x,y \", x, y, multiplyValue);\r\n        const num = [1, 5, 10, 25, 50, 100, 500, 1000, 5000, 10000];\r\n        const loop = [];\r\n        for (let i = 0; i < num.length; i++) {\r\n            loop.push(\r\n                <Grid.Row textAlign=\"center\" key={i}>\r\n                    <Grid.Column width={8}>\r\n                        <Header>\r\n                            {num[i]}{\"  \"}{x}\r\n                        </Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={8}>\r\n                        <Header>\r\n                            {(num[i] * multiplyValue).toFixed(3)}\r\n                        </Header>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            )\r\n        }\r\n        return loop;\r\n    }\r\n\r\n    render() {\r\n        const { firstCurr, secondCurr, exchangeData } = this.state;\r\n        console.log(\"home\")\r\n        return (\r\n            <Container>\r\n                <Segment.Group>\r\n                    <Segment clearing inverted color=\"violet\">\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Dropdown placeholder=\"select\" options={this.state.options} selection clearable search onChange={(e, { value }) => this.firstDD(e, { value })} value={this.state.firstCurr} />\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" width={2}>\r\n                                    <FaExchangeAlt onClick={this.onExchangeClick} style={{ cursor: \"pointer\" }} />\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Dropdown placeholder=\"select\" options={this.state.options} selection clearable search onChange={this.secondDD} value={this.state.secondCurr} />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Grid>\r\n                            <Grid.Row>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Input onChange={this.firstValue} value={this.state.firstValue} />\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" verticalAlign=\"middle\" width={2}>\r\n                                    <FaExchangeAlt onClick={this.onExchangeClick} style={{ cursor: \"pointer\" }} />\r\n                                </Grid.Column>\r\n                                <Grid.Column textAlign=\"center\" width={7}>\r\n                                    <Input onChange={this.secondValue} value={this.state.secondValue} />\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </Segment>\r\n                </Segment.Group>\r\n                <Segment.Group horizontal>\r\n                    <Segment>\r\n                        {\r\n                            firstCurr !== '' && secondCurr !== ''\r\n                                ?\r\n                                <Header attached='top' as='h3' textAlign='center' block>\r\n                                    Convert {firstCurr} to {secondCurr}\r\n                                </Header>\r\n                                :\r\n\r\n                                <Header attached='top' as='h3' textAlign='center' block>\r\n                                    Select any 2 currencies\r\n                    </Header>\r\n                        }\r\n                        <Segment attached>\r\n                            {\r\n                                this.state.spinner ?\r\n                                <Segment loading />\r\n                                :\r\n                            <Grid divided>\r\n                                <Grid.Row>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                            {firstCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                            {secondCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Divider />\r\n                                {\r\n                                    exchangeData.rates\r\n                                        ?\r\n                                        this.moreConversions(firstCurr, secondCurr, exchangeData.rates[this.state.secondCurr])\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </Grid>\r\n                            }\r\n                        </Segment>\r\n                    </Segment>\r\n                    <Segment>\r\n                        {\r\n                            firstCurr !== '' && secondCurr !== ''\r\n                                ?\r\n                                <Header attached='top' as='h3' textAlign='center' block>\r\n                                    Convert {firstCurr} to {secondCurr}\r\n                                </Header>\r\n                                :\r\n\r\n                                <Header attached='top' as='h3' textAlign='center' block>\r\n                                    Select any 2 currencies\r\n                    </Header>\r\n                        }\r\n                        <Segment attached>\r\n                            <Grid divided>\r\n                                <Grid.Row textAlign=\"center\">\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                            {secondCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={8}>\r\n                                        <Header as=\"h3\" textAlign=\"center\">\r\n                                            {firstCurr}\r\n                                        </Header>\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                                <Divider />\r\n                                {\r\n                                    exchangeData.rates\r\n                                        ?\r\n                                        this.moreConversions(firstCurr, secondCurr, 1 / (exchangeData.rates[this.state.secondCurr]))\r\n                                        :\r\n                                        null\r\n                                }\r\n                            </Grid>\r\n                        </Segment>\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = {};\r\nexport default withRouter(Home);\r\n"]},"metadata":{},"sourceType":"module"}